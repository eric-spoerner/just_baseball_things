--table schema currently auto-generated by data imports.  will refine ETL process to have pre-defined tables with key relationships and properly sized data types in final model.
DROP VIEW IF EXISTS test_view;

DROP TABLE IF EXISTS people;

CREATE TABLE people (
	playerid         VARCHAR(10) PRIMARY KEY
	,birthyear       FLOAT
	,birthmonth      FLOAT
	,birthday        FLOAT
	,birthcountry     VARCHAR(30)
	,birthstate       VARCHAR(30)
	,birthcity        VARCHAR(30)
	,namefirst        VARCHAR(30)
	,namelast         VARCHAR(30)
	,namegiven        VARCHAR(50)
	,weight          FLOAT
	,height          FLOAT
	,bats             VARCHAR(30)
	,throws           VARCHAR(30)
	,debut            DATE
	,finalGame        DATE
);

DROP TABLE IF EXISTS appearances;

CREATE TABLE appearances(
	yearid         INT NOT NULL
	,teamid        VARCHAR(10) NOT NULL
	,playerid      VARCHAR(10) NOT NULL
	,g_all          int
	,g_batting      int
	,g_defense    float
	,CONSTRAINT PK_appearances PRIMARY KEY (yearid,teamid,playerid)
);

DROP TABLE IF EXISTS teams;
CREATE TABLE teams (
	yearid          INT
	,lgid         varchar(10)
	,teamid         varchar(10)
	,franchid       varchar(10)
	,divid          varchar(10)
	,rank            int
	,g               int
	,ghome         float
	,w               int
	,l               int
	,divwin        varchar(1)
	,wcwin          varchar(1)
	,lgwin          varchar(1)
	,wswin          varchar(1)
	,r               int
	,ab              int
	,h               int
	,double              int
	,triple              int
	,hr              int
	,name           varchar(50)
	,park           varchar(50)
	,attendance    float
	,bpf             int
	,ppf             int
	,CONSTRAINT PK_teams PRIMARY KEY (yearid,teamid)
);


DROP VIEW IF EXISTS test_view;

-- CREATE VIEW test_view AS (

-- SELECT 	app.yearid
-- 		,app.teamid
-- 		,app.playerid
-- 		,people.namefirst
-- 		,people.namelast
-- 		,teams.name as teamname
-- 		,app.yearid as year
-- 		,teams.attendance
-- 		,teams.g as gamesplayed_team
-- 		,app.g_all as gamesplayed_player
-- 		,app.yearid - people.birthyear AS age
-- FROM appearances AS app
-- INNER JOIN people ON people.playerid = app.playerid
-- INNER JOIN teams ON app.teamid = teams.teamid AND teams.yearid = app.yearid

-- );



--*/
